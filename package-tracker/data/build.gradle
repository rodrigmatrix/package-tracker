plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
}

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    compileSdk Versions.compileSdkVersion

    defaultConfig {
        minSdk Versions.minSdkVersion
        targetSdk Versions.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "CORREIOS_URL", localProperties['correios.url']
        buildConfigField "String", "CORREIOS_PROXY_URL", localProperties['correios.proxyUrl']
        buildConfigField "String", "CORREIOS_VALIDATE_TOKEN_URL", localProperties['correios.validateTokenUrl']
        buildConfigField "String", "CORREIOS_REQUEST_TOKEN_URL", localProperties['correios.requestTokenUrl']

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.rodrigmatrix.data'
}

dependencies {
    implementation project(':core')
    implementation project(':domain')

    implementation(libs.androidx.ktx)
    implementation(libs.androidx.lifecycle)
    implementation(libs.androidx.window)

    implementation(libs.kotlin.stdlib)
    implementation(libs.kotlin.coroutines.android)
    implementation(libs.kotlin.serialization)

    implementation platform(libs.compose.bom)
    implementation(libs.compose.ui)

    implementation platform(libs.firebase.bom)
    implementation(libs.firebase.remote.config)
    implementation(libs.firebase.analytics)

    implementation(libs.room.runtime)
    kapt(libs.room.compiler)
    implementation(libs.room.ktx)

    implementation(libs.retrofit)
    implementation platform(libs.okHttp)
    implementation(libs.retrofit.kotlinx.converter)
    implementation(libs.okHttp.interceptor)

    implementation(libs.koin.android)

    implementation(libs.jodaTime)

    implementation(libs.workManager)

    implementation(libs.playServices.location)

    testImplementation(libs.junit)

    testImplementation(libs.junit)
    testImplementation(libs.mockk)
}