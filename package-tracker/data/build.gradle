plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
}

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    compileSdk Versions.compileSdkVersion

    defaultConfig {
        minSdk Versions.minSdkVersion
        targetSdk Versions.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField "String", "CORREIOS_URL", "\"https://webservice.correios.com.br/service/rest/rastro/\""
        buildConfigField "String", "CORREIOS_USER", localProperties['correios.user']
        buildConfigField "String", "CORREIOS_PASSWORD", localProperties['correios.password']
        buildConfigField "String", "CORREIOS_TOKEN", localProperties['correios.token']

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.rodrigmatrix.data'
}

dependencies {
    implementation project(':core')
    implementation project(':domain')

    implementation(Dependencies.androidxCore)
    implementation(Dependencies.lifecycle)
    implementation(Dependencies.androidxWindow)

    implementation(Dependencies.kotlinStdlib)
    implementation(Dependencies.kotlinCoroutinesCore)
    implementation(Dependencies.kotlinCoroutinesAndroid)
    implementation(Dependencies.kotlinSerialization)

    implementation(Dependencies.composeUi)

    implementation platform(Dependencies.firebaseBom)
    implementation(Dependencies.firebaseRemoteConfig)
    implementation(Dependencies.firebaseAnalytics)

    implementation(Dependencies.roomRuntime)
    kapt(Dependencies.roomCompiler)
    implementation(Dependencies.roomKtx)

    implementation(Dependencies.retrofit)
    implementation(Dependencies.okHttp)
    implementation(Dependencies.retrofitKotlinx)
    implementation(Dependencies.okHttpLoggingInterceptor)

    implementation(Dependencies.koinAndroid)

    implementation(Dependencies.jodaTime)

    implementation(Dependencies.workManager)

    implementation(Dependencies.playServicesLocation)

    testImplementation(Dependencies.junit)

    testImplementation(Dependencies.junit)
    testImplementation(Dependencies.mockk)
}